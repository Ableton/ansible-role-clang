---
- name: Assert required variables
  ansible.builtin.assert:
    that:
      - clang_versions | length > 0

- name: Add clang apt repository key
  become: true
  ansible.builtin.apt_key:
    url: "https://apt.llvm.org/llvm-snapshot.gpg.key"
    state: present

- name: Add clang apt binary repositories
  become: true
  ansible.builtin.apt_repository:
    repo: "deb http://apt.llvm.org/{{ clang_apt_distribution }}/ \
      llvm-toolchain-{{ clang_apt_distribution }}-{{ clang_version }} main"
    state: present
    filename: "clang-{{ clang_version }}-stable"
  loop_control:
    loop_var: clang_version
  with_items: "{{ clang_versions }}"

- name: Initialize clang_packages_str fact
  ansible.builtin.set_fact:
    clang_packages_str: ""

# We append the packages to a string and then split it to a list, because appending to a
# list requires interpolation and using interpolated strings inside of such a Jinja2
# expression is a big mess.
- name: Assemble clang package list
  ansible.builtin.set_fact:
    clang_packages_str: |
      {{ clang_packages_str }}
      clang-{{ clang_version }}
      clang-format-{{ clang_version }}
      llvm-{{ clang_version }}
  loop_control:
    loop_var: clang_version
  with_items: "{{ clang_versions }}"

- name: Transform clang_packages to a list
  ansible.builtin.set_fact:
    # By using the difference filter, we can remove all empty strings
    clang_packages: "{{ clang_packages_str.split('\n') | difference(['']) }}"

- name: Install clang packages
  become: true
  ansible.builtin.apt:
    name: "{{ clang_packages }}"
    update_cache: true
